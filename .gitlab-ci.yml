variables:
  DOCKER_IMAGE: '$IMAGE_URL'
image: '$DOCKER_IMAGE'
stages:
  - prepare
  - lint
  - test
  - quality
  - validate
  - deploy
  - release

cache: &global_cache
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/
  policy: pull

cache:warmup:
  stage: prepare
  cache:
    <<: *global_cache
    policy: pull-push
  before_script: []
  script:
    - composer install --prefer-dist --no-progress --no-interaction

lint:composer:
  needs: []
  stage: lint
  script:
    - composer validate --no-interaction --strict

lint:secretsscan:
  needs: []
  image: '$IMAGE_URL_PYTHON'
  stage: lint
  script:
    - ci/scan_secrets.sh

phpunit:
  stage: test
  needs: ['cache:warmup']
  variables:
    PHP_XDEBUG: "1"
    XDEBUG_MODE: coverage
  before_script:
    - /usr/local/bin/entrypoint.sh
    - composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader
  script:
    - ./vendor/bin/phpunit --coverage-text --testdox --colors=never -vvvvvv
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  artifacts:
    when: always
    paths:
      - build
    expire_in: 1 day
    reports:
      junit: build/logs/junit.xml
      coverage_report:
        coverage_format: cobertura
        path: build/cobertura.xml

quality:standards:
  needs: ['cache:warmup']
  stage: quality
  script:
    - ./vendor/bin/phpcs

quality:analysis:
  needs: ['cache:warmup']
  stage: quality
  script:
    - ./vendor/bin/phpstan --memory-limit=512M analyse

validate:tag-message:
  stage: validate
  only:
    - tags
  script:
    - ci/validate_tag_message.sh $CI_COMMIT_TAG
  tags:
    - k8s-tbk

deploy:deploy-to-github:
  stage: deploy
  only:
    - tags
  script:
    - ci/deploy_to_github.sh
  tags:
    - k8s-tbk

release:release-to-github:
  image: '$IMAGE_URL_PYTHON'
  stage: release
  only:
    - tags
  script:
    - ci/release_to_github.sh $CI_COMMIT_TAG
  tags:
    - k8s-tbk
